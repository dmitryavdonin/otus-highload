#!/usr/bin/env python3
import asyncio
import re
import sys
sys.path.append('.')
from db import get_slave_session, get_user_friends
from models import Post, Friendship
from sqlalchemy import select

async def main():
    # –ß–∏—Ç–∞–µ–º –æ—Ç—á–µ—Ç –∏ –∏–∑–≤–ª–µ–∫–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    with open('lesson-06/test_report.html', 'r') as f:
        content = f.read()
    
    user_ids = re.findall(r'[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}', content)
    
    if len(user_ids) >= 2:
        user1_id = user_ids[0]  # –ê–ª–µ–∫—Å–µ–π
        user2_id = user_ids[1]  # –ú–∞—Ä–∏—è
        
        print(f"User1 (–ê–ª–µ–∫—Å–µ–π) ID: {user1_id}")
        print(f"User2 (–ú–∞—Ä–∏—è) ID: {user2_id}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–∂–µ—Å–∫–∏–µ —Å–≤—è–∑–∏
        user1_friends = await get_user_friends(user1_id)
        user2_friends = await get_user_friends(user2_id)
        
        print(f"\nUser1 friends: {user1_friends}")
        print(f"User2 friends: {user2_friends}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –ø–æ—Å—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        async with get_slave_session() as session:
            result = await session.execute(
                select(Post).order_by(Post.created_at.desc())
            )
            all_posts = result.scalars().all()
            
            print(f"\n=== –í–°–ï –ü–û–°–¢–´ –í –ë–î ===")
            for i, post in enumerate(all_posts):
                author_name = "–ê–ª–µ–∫—Å–µ–π" if str(post.author_user_id) == user1_id else "–ú–∞—Ä–∏—è"
                print(f"{i+1}. {author_name} ({str(post.author_user_id)[:8]}...): {post.text[:50]}...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –ª–µ–Ω—Ç–µ User1 (–ê–ª–µ–∫—Å–µ—è)
        print(f"\n=== –õ–ï–ù–¢–ê USER1 (–ê–õ–ï–ö–°–ï–ô) - –î–û–õ–ñ–ù–ê –°–û–î–ï–†–ñ–ê–¢–¨ –ü–û–°–¢–´ –ú–ê–†–ò–ò ===")
        async with get_slave_session() as session:
            # –ü–æ–¥–∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö friend_id, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö User1
            subq = select(Friendship.friend_id).where(Friendship.user_id == user1_id).subquery()
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç—ã, –≥–¥–µ –∞–≤—Ç–æ—Ä —è–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ –¥—Ä—É–∑–µ–π User1
            query = (
                select(Post)
                .where(Post.author_user_id.in_(subq))
                .order_by(Post.created_at.desc())
            )
            result = await session.execute(query)
            user1_feed_posts = result.scalars().all()
            
            print(f"–ù–∞–π–¥–µ–Ω–æ {len(user1_feed_posts)} –ø–æ—Å—Ç–æ–≤ –¥–ª—è –ª–µ–Ω—Ç—ã User1:")
            for i, post in enumerate(user1_feed_posts):
                author_name = "–ê–ª–µ–∫—Å–µ–π" if str(post.author_user_id) == user1_id else "–ú–∞—Ä–∏—è"
                is_own = "üî¥ –°–í–û–ô –ü–û–°–¢!" if str(post.author_user_id) == user1_id else "‚úÖ –ø–æ—Å—Ç –¥—Ä—É–≥–∞"
                print(f"  {i+1}. {is_own} {author_name}: {post.text[:50]}...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –ª–µ–Ω—Ç–µ User2 (–ú–∞—Ä–∏–∏)
        print(f"\n=== –õ–ï–ù–¢–ê USER2 (–ú–ê–†–ò–Ø) - –î–û–õ–ñ–ù–ê –°–û–î–ï–†–ñ–ê–¢–¨ –ü–û–°–¢–´ –ê–õ–ï–ö–°–ï–Ø ===")
        async with get_slave_session() as session:
            # –ü–æ–¥–∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö friend_id, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö User2
            subq = select(Friendship.friend_id).where(Friendship.user_id == user2_id).subquery()
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç—ã, –≥–¥–µ –∞–≤—Ç–æ—Ä —è–≤–ª—è–µ—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ –¥—Ä—É–∑–µ–π User2
            query = (
                select(Post)
                .where(Post.author_user_id.in_(subq))
                .order_by(Post.created_at.desc())
            )
            result = await session.execute(query)
            user2_feed_posts = result.scalars().all()
            
            print(f"–ù–∞–π–¥–µ–Ω–æ {len(user2_feed_posts)} –ø–æ—Å—Ç–æ–≤ –¥–ª—è –ª–µ–Ω—Ç—ã User2:")
            for i, post in enumerate(user2_feed_posts):
                author_name = "–ê–ª–µ–∫—Å–µ–π" if str(post.author_user_id) == user1_id else "–ú–∞—Ä–∏—è"
                is_own = "üî¥ –°–í–û–ô –ü–û–°–¢!" if str(post.author_user_id) == user2_id else "‚úÖ –ø–æ—Å—Ç –¥—Ä—É–≥–∞"
                print(f"  {i+1}. {is_own} {author_name}: {post.text[:50]}...")
        
    else:
        print("Not enough user IDs found")

if __name__ == "__main__":
    asyncio.run(main()) 