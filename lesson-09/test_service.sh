#!/bin/bash

echo "Автоматическое тестирование отказоустойчивой системы"
echo "===================================================="

# Проверка что система запущена
echo "Проверка состояния системы..."
if ! curl -s http://localhost/health > /dev/null; then
    echo "❌ Система не запущена! Запустите сначала: ./start_service.sh"
    exit 1
fi

echo "✅ Система работает, начинаем автоматическое тестирование..."
echo ""

# Функция для ожидания между тестами
wait_between_tests() {
    local seconds=$1
    local description=$2
    echo "Ожидание $seconds секунд перед $description..."
    sleep $seconds
    echo ""
}

# 1. Базовое нагрузочное тестирование
echo "1. БАЗОВОЕ НАГРУЗОЧНОЕ ТЕСТИРОВАНИЕ"
echo "=================================="
echo "Запуск базового нагрузочного тестирования..."
python3 load_test.py
if [ $? -eq 0 ]; then
    echo "✅ Базовое тестирование завершено успешно"
else
    echo "❌ Ошибка в базовом тестировании"
fi

wait_between_tests 5 "детальным тестированием"

# 2. Детальное тестирование с логированием
echo "2. ДЕТАЛЬНОЕ ТЕСТИРОВАНИЕ С ЛОГИРОВАНИЕМ"
echo "========================================"
echo "Запуск детального тестирования с логированием..."
python3 final_test_with_logs.py
if [ $? -eq 0 ]; then
    echo "✅ Детальное тестирование завершено успешно"
else
    echo "❌ Ошибка в детальном тестировании"
fi

wait_between_tests 10 "тестированием отказоустойчивости"

# 3. Тестирование отказоустойчивости (Python версия)
if [ -f failover_test.py ]; then
    chmod +x failover_test.py
    
    echo "3. КОМБИНИРОВАННЫЙ ТЕСТ ОТКАЗОУСТОЙЧИВОСТИ"
    echo "========================================="
    echo "Запуск комбинированного теста отказоустойчивости (Python версия)..."
    echo "Тест проверяет работу системы при одновременном отказе БД slave и приложения"
    echo ""
    
    python3 failover_test.py combined
    failover_exit_code=$?
    
    if [ $failover_exit_code -eq 0 ]; then
        echo "✅ Тест отказоустойчивости завершен успешно"
    else
        echo "⚠️ Тест отказоустойчивости завершен с предупреждениями"
    fi
else
    echo "⚠️ Файл failover_test.py не найден, пропускаем тесты отказоустойчивости"
    echo "   Убедитесь что Python тест создан и исполняемый"
fi

echo ""
echo "✅ Все тесты завершены"
echo "Для остановки: ./stop_service.sh" 