from sqlalchemy.ext.declarative import declarative_base
import os
from sqlalchemy.ext.asyncio import AsyncSession, create_async_engine
from sqlalchemy.orm import sessionmaker

# Create declarative base
Base = declarative_base()

def get_database_config():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã"""
    use_haproxy = os.getenv("USE_HAPROXY", "false").lower() == "true"
    
    if use_haproxy:
        # –†–µ–∂–∏–º —Å HAProxy
        master_host = os.getenv("DB_MASTER_HOST", "haproxy")
        master_port = os.getenv("DB_MASTER_PORT", "5000")
        slave_host = os.getenv("DB_SLAVE_HOST", "haproxy")
        slave_port = os.getenv("DB_SLAVE_PORT", "5001")
        
        print(f"üîß –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è HAProxy —Ä–µ–∂–∏–º:")
        print(f"üîß Master: {master_host}:{master_port}")
        print(f"üîß Slaves: {slave_host}:{slave_port}")
    else:
        # –ü—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ (–æ–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å)
        master_host = os.getenv("DB_HOST", "postgres")
        master_port = os.getenv("DB_PORT", "5432")
        slave_host = master_host  # –ï—Å–ª–∏ HAProxy –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, —Å–ª–µ–π–≤ = –º–∞—Å—Ç–µ—Ä
        slave_port = master_port
        
        print(f"üîß –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä—è–º–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ:")
        print(f"üîß Database: {master_host}:{master_port}")
    
    return {
        "master_host": master_host,
        "master_port": master_port,
        "slave_host": slave_host,
        "slave_port": slave_port,
        "db_name": os.getenv("DB_NAME", "social_network"),
        "db_user": os.getenv("DB_USER", "postgres"),
        "db_password": os.getenv("DB_PASSWORD", "postgres"),
        "use_haproxy": use_haproxy
    }

# –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
config = get_database_config()

# –°–æ–∑–¥–∞–µ–º –¥–≤–∏–∂–∫–∏ –¥–ª—è –º–∞—Å—Ç–µ—Ä–∞ –∏ —Å–ª–µ–π–≤–æ–≤
master_url = f"postgresql+asyncpg://{config['db_user']}:{config['db_password']}@{config['master_host']}:{config['master_port']}/{config['db_name']}"
slave_url = f"postgresql+asyncpg://{config['db_user']}:{config['db_password']}@{config['slave_host']}:{config['slave_port']}/{config['db_name']}"

print(f"üîß Master URL: {master_url}")
print(f"üîß Slave URL: {slave_url}")

# –°–æ–∑–¥–∞–µ–º –¥–≤–∏–∂–∫–∏
master_engine = create_async_engine(
    master_url, 
    echo=False, 
    pool_size=10, 
    max_overflow=20, 
    pool_recycle=300,  # –ë–æ–ª–µ–µ —á–∞—Å—Ç—ã–π recycle –¥–ª—è failover (5 –º–∏–Ω—É—Ç)
    pool_pre_ping=True,
    pool_timeout=30,
    pool_reset_on_return='rollback',  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ pool
    connect_args={
        "server_settings": {"application_name": "social_network_master"},
        "command_timeout": 10  # –¢–∞–π–º–∞—É—Ç –∫–æ–º–∞–Ω–¥ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –º–µ—Ä—Ç–≤—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
    }
)
slave_engine = create_async_engine(
    slave_url, 
    echo=False, 
    pool_size=10, 
    max_overflow=20, 
    pool_recycle=300,  # –ë–æ–ª–µ–µ —á–∞—Å—Ç—ã–π recycle –¥–ª—è failover (5 –º–∏–Ω—É—Ç)
    pool_pre_ping=True,
    pool_timeout=30,
    pool_reset_on_return='rollback',  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –ø—Ä–∏ –≤–æ–∑–≤—Ä–∞—Ç–µ –≤ pool
    connect_args={
        "server_settings": {"application_name": "social_network_slave"},
        "command_timeout": 10  # –¢–∞–π–º–∞—É—Ç –∫–æ–º–∞–Ω–¥ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –º–µ—Ä—Ç–≤—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π
    }
)

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–±—Ä–∏–∫–∏ —Å–µ—Å—Å–∏–π
master_session_factory = sessionmaker(master_engine, class_=AsyncSession, expire_on_commit=False)
slave_session_factory = sessionmaker(slave_engine, class_=AsyncSession, expire_on_commit=False)

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–π
def get_master_session():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–µ—Å—Å–∏—é –¥–ª—è –∑–∞–ø–∏—Å–∏ (–º–∞—Å—Ç–µ—Ä)"""
    return master_session_factory()

def get_slave_session():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–µ—Å—Å–∏—é –¥–ª—è —á—Ç–µ–Ω–∏—è (—Å–ª–µ–π–≤—ã —á–µ—Ä–µ–∑ HAProxy –∏–ª–∏ –º–∞—Å—Ç–µ—Ä)"""
    return slave_session_factory()

# –î–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
def get_db_session():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–µ—Å—Å–∏—é –ë–î (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –º–∞—Å—Ç–µ—Ä)"""
    return get_master_session()

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
def get_db_info():
    """–ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ë–î"""
    return {
        "use_haproxy": config["use_haproxy"],
        "master_host": config["master_host"],
        "master_port": config["master_port"],
        "slave_host": config["slave_host"],
        "slave_port": config["slave_port"],
        "db_name": config["db_name"]
    } 