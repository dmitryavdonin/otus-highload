#!/bin/bash

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –∏ —Ñ–∞–π–ª—ã
PROJECT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
LOG_DIR="$PROJECT_DIR/logs"
LOG_FILE="$LOG_DIR/websocket_server.log"
PID_FILE="$PROJECT_DIR/websocket_server.pid"

# –§—É–Ω–∫—Ü–∏—è –ø–æ–º–æ—â–∏
show_help() {
    echo -e "${BLUE}üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤ WebSocket —Å–µ—Ä–≤–µ—Ä–∞${NC}"
    echo "=================================================="
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–û–ü–¶–ò–Ø]"
    echo ""
    echo "–û–ø—Ü–∏–∏:"
    echo "  -f, --follow     –°–ª–µ–¥–∏—Ç—å –∑–∞ –ª–æ–≥–∞–º–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ (tail -f)"
    echo "  -l, --last N     –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ N —Å—Ç—Ä–æ–∫ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 50)"
    echo "  -c, --clear      –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏"
    echo "  -s, --status     –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞"
    echo "  -h, --help       –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0               –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤"
    echo "  $0 -f            –°–ª–µ–¥–∏—Ç—å –∑–∞ –ª–æ–≥–∞–º–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
    echo "  $0 -l 100        –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 100 —Å—Ç—Ä–æ–∫"
    echo "  $0 -s            –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞
show_status() {
    echo -e "${BLUE}üìä –°—Ç–∞—Ç—É—Å WebSocket —Å–µ—Ä–≤–µ—Ä–∞${NC}"
    echo "=================================================="
    
    if [ -f "$PID_FILE" ]; then
        PID=$(cat "$PID_FILE")
        if ps -p "$PID" > /dev/null 2>&1; then
            echo -e "${GREEN}‚úÖ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω (PID: $PID)${NC}"
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ü–µ—Å—Å–µ
            echo -e "${BLUE}üìà –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ—Ü–µ—Å—Å–µ:${NC}"
            ps -p "$PID" -o pid,ppid,cmd,etime,pcpu,pmem --no-headers | while read line; do
                echo "  $line"
            done
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
            echo -e "${BLUE}üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏:${NC}"
            if curl -s http://localhost:8001/health > /dev/null 2>&1; then
                echo -e "  ${GREEN}‚úÖ HTTP —Å–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
            else
                echo -e "  ${RED}‚ùå HTTP —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${NC}"
            fi
            
        else
            echo -e "${RED}‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω (PID —Ñ–∞–π–ª –Ω–∞–π–¥–µ–Ω, –Ω–æ –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)${NC}"
            echo -e "${YELLOW}üí° –£–¥–∞–ª–∏—Ç–µ PID —Ñ–∞–π–ª: rm $PID_FILE${NC}"
        fi
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –°–µ—Ä–≤–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω (PID —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω)${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ª–æ–≥–æ–≤
    if [ -f "$LOG_FILE" ]; then
        LOG_SIZE=$(du -h "$LOG_FILE" | cut -f1)
        LOG_LINES=$(wc -l < "$LOG_FILE")
        echo -e "${BLUE}üìÑ –õ–æ–≥ —Ñ–∞–π–ª:${NC}"
        echo "  –ü—É—Ç—å: $LOG_FILE"
        echo "  –†–∞–∑–º–µ—Ä: $LOG_SIZE"
        echo "  –°—Ç—Ä–æ–∫: $LOG_LINES"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $LOG_FILE${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏ –ª–æ–≥–æ–≤
clear_logs() {
    echo -e "${YELLOW}üóëÔ∏è  –û—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤...${NC}"
    if [ -f "$LOG_FILE" ]; then
        > "$LOG_FILE"
        echo -e "${GREEN}‚úÖ –õ–æ–≥–∏ –æ—á–∏—â–µ–Ω—ã${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –ª–æ–≥–æ–≤
show_logs() {
    local lines=${1:-50}
    
    if [ ! -f "$LOG_FILE" ]; then
        echo -e "${RED}‚ùå –õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $LOG_FILE${NC}"
        echo -e "${YELLOW}üí° –í–æ–∑–º–æ–∂–Ω–æ —Å–µ—Ä–≤–µ—Ä –µ—â–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–ª—Å—è${NC}"
        return 1
    fi
    
    echo -e "${BLUE}üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ $lines —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤:${NC}"
    echo "=================================================="
    tail -n "$lines" "$LOG_FILE"
}

# –§—É–Ω–∫—Ü–∏—è —Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –∑–∞ –ª–æ–≥–∞–º–∏
follow_logs() {
    if [ ! -f "$LOG_FILE" ]; then
        echo -e "${RED}‚ùå –õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $LOG_FILE${NC}"
        echo -e "${YELLOW}üí° –í–æ–∑–º–æ–∂–Ω–æ —Å–µ—Ä–≤–µ—Ä –µ—â–µ –Ω–µ –∑–∞–ø—É—Å–∫–∞–ª—Å—è${NC}"
        return 1
    fi
    
    echo -e "${BLUE}üìÑ –°–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∑–∞ –ª–æ–≥–∞–º–∏ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):${NC}"
    echo "=================================================="
    tail -f "$LOG_FILE"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
case "${1:-}" in
    -f|--follow)
        follow_logs
        ;;
    -l|--last)
        if [ -n "$2" ] && [ "$2" -eq "$2" ] 2>/dev/null; then
            show_logs "$2"
        else
            echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫: $2${NC}"
            show_help
            exit 1
        fi
        ;;
    -c|--clear)
        clear_logs
        ;;
    -s|--status)
        show_status
        ;;
    -h|--help)
        show_help
        ;;
    "")
        show_logs
        ;;
    *)
        echo -e "${RED}‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1${NC}"
        show_help
        exit 1
        ;;
esac 