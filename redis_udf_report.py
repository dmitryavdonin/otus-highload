#!/usr/bin/env python3
"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç—á–µ—Ç–∞ –ø–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Redis UDF
"""

import json
import os
from datetime import datetime

def load_metrics(file_path):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –º–µ—Ç—Ä–∏–∫–∏ –∏–∑ JSON —Ñ–∞–π–ª–∞"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            return json.load(f)
    except FileNotFoundError:
        print(f"‚ùå –§–∞–π–ª {file_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return None
    except json.JSONDecodeError:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è JSON –∏–∑ {file_path}")
        return None

def format_time(seconds):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –≤—Ä–µ–º—è –≤ —á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥"""
    if seconds < 1:
        return f"{seconds*1000:.1f}ms"
    else:
        return f"{seconds:.3f}s"

def generate_html_report(redis_udf_data):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML –æ—Ç—á–µ—Ç"""
    
    html_content = f"""
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–û—Ç—á–µ—Ç –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é Redis UDF</title>
    <style>
        body {{
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 20px;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }}
        .container {{
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            border-radius: 15px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }}
        .header {{
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 30px;
            text-align: center;
        }}
        .header h1 {{
            margin: 0;
            font-size: 2.5em;
            font-weight: 300;
        }}
        .header p {{
            margin: 10px 0 0 0;
            opacity: 0.9;
            font-size: 1.1em;
        }}
        .content {{
            padding: 30px;
        }}
        .metrics-grid {{
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }}
        .metric-card {{
            background: #f8f9fa;
            border-radius: 10px;
            padding: 20px;
            border-left: 5px solid #667eea;
        }}
        .metric-title {{
            font-size: 1.2em;
            font-weight: 600;
            color: #333;
            margin-bottom: 15px;
        }}
        .metric-value {{
            font-size: 2em;
            font-weight: 700;
            color: #667eea;
            margin-bottom: 5px;
        }}
        .metric-details {{
            color: #666;
            font-size: 0.9em;
        }}
        .summary {{
            background: #e3f2fd;
            border-radius: 10px;
            padding: 20px;
            margin-top: 30px;
        }}
        .summary h3 {{
            color: #1976d2;
            margin-top: 0;
        }}
        .footer {{
            text-align: center;
            padding: 20px;
            color: #666;
            border-top: 1px solid #eee;
        }}
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üìä –û—Ç—á–µ—Ç –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é Redis UDF</h1>
            <p>–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –¥–∏–∞–ª–æ–≥–æ–≤</p>
            <p>–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ: {datetime.now().strftime('%d.%m.%Y %H:%M:%S')}</p>
        </div>
        
        <div class="content">
            <div class="metrics-grid">
"""

    # –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç—Ä–∏–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
    operations = [
        ('user_registration', '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', 'üë§'),
        ('user_login', '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π', 'üîê'),
        ('friend_addition', '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –¥—Ä—É–∑–µ–π', 'üë•'),
        ('message_send', '–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π', 'üì§'),
        ('message_list', '–ß—Ç–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π', 'üì•')
    ]
    
    for op_key, op_name, emoji in operations:
        if op_key in redis_udf_data:
            data = redis_udf_data[op_key]
            avg_time = data.get('average_time', 0)
            ops_per_sec = data.get('operations_per_second', 0)
            count = data.get('operation_count', 0)
            
            html_content += f"""
                <div class="metric-card">
                    <div class="metric-title">{emoji} {op_name}</div>
                    <div class="metric-value">{format_time(avg_time)}</div>
                    <div class="metric-details">
                        <strong>–û–ø–µ—Ä–∞—Ü–∏–π:</strong> {count}<br>
                        <strong>–û–ø–µ—Ä–∞—Ü–∏–π/—Å–µ–∫:</strong> {ops_per_sec:.1f}<br>
                        <strong>–ú–µ–¥–∏–∞–Ω–∞:</strong> {format_time(data.get('median_time', 0))}<br>
                        <strong>95-–π –ø–µ—Ä—Ü–µ–Ω—Ç–∏–ª—å:</strong> {format_time(data.get('p95_time', 0))}
                    </div>
                </div>
"""

    html_content += """
            </div>
            
            <div class="summary">
                <h3>üìã –°–≤–æ–¥–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤</h3>
                <p><strong>–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–∞:</strong></p>
                <ul>
                    <li>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: 40</li>
                    <li>–°–æ–æ–±—â–µ–Ω–∏–π –≤ –¥–∏–∞–ª–æ–≥–µ: 20</li>
                    <li>–î–∏–∞–ª–æ–≥–æ–≤ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: 10</li>
                    <li>–ë—ç–∫–µ–Ω–¥: Redis UDF</li>
                </ul>
                
                <p><strong>–û—Å–Ω–æ–≤–Ω—ã–µ –≤—ã–≤–æ–¥—ã:</strong></p>
                <ul>
                    <li>üöÄ –°–∞–º–∞—è –±—ã—Å—Ç—Ä–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</li>
                    <li>‚è±Ô∏è –°–∞–º–∞—è –º–µ–¥–ª–µ–Ω–Ω–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è: –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π</li>
                    <li>üìä Redis UDF –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω—É—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π —á—Ç–µ–Ω–∏—è</li>
                    <li>üîß –û–ø–µ—Ä–∞—Ü–∏–∏ –∑–∞–ø–∏—Å–∏ —Ç—Ä–µ–±—É—é—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏</li>
                </ul>
            </div>
        </div>
        
        <div class="footer">
            <p>–û—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ ‚Ä¢ Redis UDF Performance Test</p>
        </div>
    </div>
</body>
</html>
"""
    
    return html_content

def main():
    print("üöÄ –ì–ï–ù–ï–†–ê–¶–ò–Ø HTML –û–¢–ß–ï–¢–ê: Redis UDF")
    print("=" * 60)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ Redis UDF
    redis_udf_file = "lesson-07/dialog_metrics_redis_udf.json"
    redis_udf_data = load_metrics(redis_udf_file)
    
    if not redis_udf_data:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ Redis UDF")
        return
    
    print("‚úÖ –î–∞–Ω–Ω—ã–µ Redis UDF –∑–∞–≥—Ä—É–∂–µ–Ω—ã")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML –æ—Ç—á–µ—Ç
    html_content = generate_html_report(redis_udf_data)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç—á–µ—Ç
    output_file = "lesson-07/redis_udf_performance_report.html"
    os.makedirs("lesson-07", exist_ok=True)
    
    with open(output_file, 'w', encoding='utf-8') as f:
        f.write(html_content)
    
    print(f"‚úÖ HTML –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {output_file}")
    print(f"üåê –û—Ç–∫—Ä–æ–π—Ç–µ —Ñ–∞–π–ª –≤ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞")

if __name__ == "__main__":
    main() 